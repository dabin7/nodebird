{"ast":null,"code":"import axios from 'axios';\nimport { put, takeEvery, fork, all, call } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nfunction addPostAPI(data) {\n  return axios.post('/api/addpost', data);\n}\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      err: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.Comment(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    yield put({\n      type: ADD_COMMENT_REQUEST\n    });\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      err: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","put","takeEvery","fork","all","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","delay","type","result","err","response","addCommentAPI","Comment","postId","addComment","watchAddPost","watchAddComment","postSaga"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/sagas/post.js"],"sourcesContent":["import axios from 'axios';\r\nimport { put, takeEvery, fork, all, call } from 'redux-saga/effects';\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/addpost', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      err: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.Comment(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    yield put({\r\n      type: ADD_COMMENT_REQUEST,\r\n    });\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      err: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AACpE,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,QACd,kBAAkB;AAEzB,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOb,KAAK,CAACc,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;AACzC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACxB,IAAI;IACF,MAAMC,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMhB,GAAG,CAAC;MACRiB,IAAI,EAAEX,gBAAgB;MACtBM,IAAI,EAAEM,MAAM,CAACN;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZ,MAAMnB,GAAG,CAAC;MACRiB,IAAI,EAAEV,gBAAgB;MACtBY,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAACR;IACpB,CAAC,CAAC;EACJ;AACF;AAEA,SAASS,aAAa,CAACT,IAAI,EAAE;EAC3B,OAAOb,KAAK,CAACuB,OAAO,CAAE,aAAYV,IAAI,CAACW,MAAO,UAAS,EAAEX,IAAI,CAAC;AAChE;AAEA,UAAUY,UAAU,CAACT,MAAM,EAAE;EAC3B,IAAI;IACF,MAAMf,GAAG,CAAC;MACRiB,IAAI,EAAET;IACR,CAAC,CAAC;IACF,MAAMU,MAAM,GAAG,MAAMd,IAAI,CAACiB,aAAa,EAAEN,MAAM,CAACH,IAAI,CAAC;IACrD,MAAMZ,GAAG,CAAC;MACRiB,IAAI,EAAER,mBAAmB;MACzBG,IAAI,EAAEM,MAAM,CAACN;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZ,MAAMnB,GAAG,CAAC;MACRiB,IAAI,EAAEP,mBAAmB;MACzBS,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAACR;IACpB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUa,YAAY,GAAG;EACvB,MAAMxB,SAAS,CAACI,gBAAgB,EAAES,OAAO,CAAC;AAC5C;AAEA,UAAUY,eAAe,GAAG;EAC1B,MAAMzB,SAAS,CAACO,mBAAmB,EAAEgB,UAAU,CAAC;AAClD;AAEA,eAAe,UAAUG,QAAQ,GAAG;EAClC,MAAMxB,GAAG,CAAC,CAACD,IAAI,CAACuB,YAAY,CAAC,EAAEvB,IAAI,CAACwB,eAAe,CAAC,CAAC,CAAC;AACxD"},"metadata":{},"sourceType":"module"}