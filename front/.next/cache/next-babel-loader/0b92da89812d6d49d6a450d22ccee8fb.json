{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uB2E4\\uBE48\\\\Desktop\\\\nodebird\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginRequestAction } from '../reducers/user';\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`; // 인라인스타일은 리렌더링되기 때문에 최적화를 위해 커스텀하게 바꿔줌\n\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    isLoggingIn\n  } = useSelector(state => state.user);\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  //컴포넌트에 props로 넘겨주는 함수는 useCallback해야 최적화가 된다\n\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    dispatch(loginRequestAction({\n      id,\n      password\n    }));\n  }, [id, password]); //가상의 state 더미 데이터 setIsLoggedIn\n\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: email,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true\n    //required 제출시 반드시 채워져야하는\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isLoggingIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useCallback","Form","Input","Button","Link","styled","useInput","useDispatch","useSelector","loginRequestAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","isLoggingIn","state","user","id","onChangeId","password","onChangePassword","onSubmitForm","console","log","email"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/components/LoginForm.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport useInput from '../hooks/useInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginRequestAction } from '../reducers/user';\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`; // 인라인스타일은 리렌더링되기 때문에 최적화를 위해 커스텀하게 바꿔줌\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { isLoggingIn } = useSelector((state) => state.user);\r\n  const [id, onChangeId] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n\r\n  //컴포넌트에 props로 넘겨주는 함수는 useCallback해야 최적화가 된다\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    console.log(id, password);\r\n    dispatch(loginRequestAction({ id, password }));\r\n  }, [id, password]); //가상의 state 더미 데이터 setIsLoggedIn\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor='user-id'>이메일</label>\r\n        <br />\r\n        <Input name='user-id' value={email} onChange={onChangeId} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor='user-password'>비밀번호</label>\r\n        <br />\r\n        <Input\r\n          name='user-password'\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          required\r\n          //required 제출시 반드시 채워져야하는\r\n        />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button type='primary' htmlType='submit' loading={isLoggingIn}>\r\n          로그인\r\n        </Button>\r\n        <Link href='/signup'>\r\n          <a>\r\n            <button>회원가입</button>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,kBAAkB;AAErD,MAAMC,aAAa,GAAGL,MAAM,CAACM,GAAI;AACjC;AACA,CAAC,CAAC,CAAC;;AAEH,MAAMC,WAAW,GAAGP,MAAM,CAACJ,IAAI,CAAE;AACjC;AACA,CAAC;AAED,MAAMY,SAAS,GAAG,MAAM;EACtB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM;IAAEQ;EAAY,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC1D,MAAM,CAACC,EAAE,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACc,QAAQ,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEjD;;EAEA,MAAMgB,YAAY,GAAGtB,WAAW,CAAC,MAAM;IACrCuB,OAAO,CAACC,GAAG,CAACN,EAAE,EAAEE,QAAQ,CAAC;IACzBN,QAAQ,CAACL,kBAAkB,CAAC;MAAES,EAAE;MAAEE;IAAS,CAAC,CAAC,CAAC;EAChD,CAAC,EAAE,CAACF,EAAE,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpB,OACE,MAAC,WAAW;IAAC,QAAQ,EAAEE,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAAY,EACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,KAAK;IAAC,IAAI,EAAC,SAAS;IAAC,KAAK,EAAEG,KAAM;IAAC,QAAQ,EAAEN,UAAW;IAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjE,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,OAAO,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAa,EAC3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,KAAK;IACJ,IAAI,EAAC,eAAe;IACpB,KAAK,EAAEC,QAAS;IAChB,QAAQ,EAAEC,gBAAiB;IAC3B,QAAQ;IACR;IAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACA,CACE,EACN,MAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACZ,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAC,OAAO,EAAEN,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAErD,EACT,MAAC,IAAI;IAAC,IAAI,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAqB,CACnB,CACC,CACO,CACJ;AAElB,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}