{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uB2E4\\uBE48\\\\Desktop\\\\nodebird\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design';\nimport PostImages from './PostImages';\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    user = _useSelector.user;\n  var id = user === null || user === void 0 ? void 0 : user.id;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }))] //배열안에 jsx를 넣어줄때는 key를 항상 넣어줘야됨\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n_s(PostCard, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Card","Popover","Button","Avatar","React","PropTypes","useSelector","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","PostImages","PostCard","post","state","user","id","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/components/PostCard.js"],"sourcesContent":["import { Card, Popover, Button, Avatar } from 'antd';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from '@ant-design';\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const id = user?.id;\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key='retweet' />,\r\n          <HeartOutlined key='heart' />,\r\n          <MessageOutlined key='message' />,\r\n          <Popover\r\n            key='more'\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type='danger'>삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]} //배열안에 jsx를 넣어줄때는 key를 항상 넣어줘야됨\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}