{"ast":null,"code":"import axios from 'axios';\nimport { put, takeEvery, fork, all, call } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nfunction addPostAPI(data) {\n  return axios.post('/api/addpost', data);\n}\nfunction* addPost(action) {\n  try {\n    yield put({\n      type: ADD_POST_REQUEST\n    });\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.Comment('/api/addComment');\n}\nfunction* addComment(action) {\n  try {\n    yield put({\n      type: ADD_Comment_REQUEST\n    });\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_Comment_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_Comment_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addPost);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","put","takeEvery","fork","all","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","type","result","err","response","addCommentAPI","Comment","addComment","ADD_Comment_REQUEST","ADD_Comment_SUCCESS","ADD_Comment_FAILURE","watchAddPost","watchAddComment","postSaga"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/sagas/post.js"],"sourcesContent":["import axios from 'axios';\r\nimport { put, takeEvery, fork, all, call } from 'redux-saga/effects';\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/addpost', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    yield put({\r\n      type: ADD_POST_REQUEST,\r\n    });\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.Comment('/api/addComment');\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    yield put({\r\n      type: ADD_Comment_REQUEST,\r\n    });\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_Comment_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_Comment_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeEvery(ADD_COMMENT_REQUEST, addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AACpE,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,QACd,kBAAkB;AAEzB,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOb,KAAK,CAACc,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;AACzC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACxB,IAAI;IACF,MAAMf,GAAG,CAAC;MACRgB,IAAI,EAAEX;IACR,CAAC,CAAC;IACF,MAAMY,MAAM,GAAG,MAAMb,IAAI,CAACO,UAAU,EAAEI,MAAM,CAACH,IAAI,CAAC;IAClD,MAAMZ,GAAG,CAAC;MACRgB,IAAI,EAAEV,gBAAgB;MACtBM,IAAI,EAAEK,MAAM,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,MAAMlB,GAAG,CAAC;MACRgB,IAAI,EAAET,gBAAgB;MACtBK,IAAI,EAAEM,GAAG,CAACC,QAAQ,CAACP;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,SAASQ,aAAa,CAACR,IAAI,EAAE;EAC3B,OAAOb,KAAK,CAACsB,OAAO,CAAC,iBAAiB,CAAC;AACzC;AAEA,UAAUC,UAAU,CAACP,MAAM,EAAE;EAC3B,IAAI;IACF,MAAMf,GAAG,CAAC;MACRgB,IAAI,EAAEO;IACR,CAAC,CAAC;IACF,MAAMN,MAAM,GAAG,MAAMb,IAAI,CAACgB,aAAa,EAAEL,MAAM,CAACH,IAAI,CAAC;IACrD,MAAMZ,GAAG,CAAC;MACRgB,IAAI,EAAEQ,mBAAmB;MACzBZ,IAAI,EAAEK,MAAM,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,MAAMlB,GAAG,CAAC;MACRgB,IAAI,EAAES,mBAAmB;MACzBb,IAAI,EAAEM,GAAG,CAACC,QAAQ,CAACP;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUc,YAAY,GAAG;EACvB,MAAMzB,SAAS,CAACI,gBAAgB,EAAES,OAAO,CAAC;AAC5C;AAEA,UAAUa,eAAe,GAAG;EAC1B,MAAM1B,SAAS,CAACO,mBAAmB,EAAEM,OAAO,CAAC;AAC/C;AAEA,eAAe,UAAUc,QAAQ,GAAG;EAClC,MAAMzB,GAAG,CAAC,CAACD,IAAI,CAACwB,YAAY,CAAC,EAAExB,IAAI,CAACyB,eAAe,CAAC,CAAC,CAAC;AACxD"},"metadata":{},"sourceType":"module"}