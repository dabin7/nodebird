{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uB2E4\\uBE48\\\\Desktop\\\\nodebird\\\\front\\\\pages\\\\index.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/PostCard';\nvar Home = function Home() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts,\n    hasMorePosts = _useSelector2.hasMorePosts;\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight); //scrollY: 얼마나 내렸는지  clientHeight 화면 보이는 길이 scrollHeight 총 길이\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n        if (hasMorePosts) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    }; // 메모리에 쌓이는 데이터를 지워줘야됨.\n  }, [hasMorePosts, loadPostLoading]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    });\n  }))\n  //key를 index로 쓰면 안됨. 데이터 변경이 있을 경우.\n  ;\n};\n_s(Home, \"3+eEzLa3EDcdDKa1fmrfORK3GP0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","LOAD_POSTS_REQUEST","AppLayout","PostForm","PostCard","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","loadPostLoading","map","id"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/postForm';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(\r\n        window.scrollY,\r\n        document.documentElement.clientHeight,\r\n        document.documentElement.scrollHeight\r\n      ); //scrollY: 얼마나 내렸는지  clientHeight 화면 보이는 길이 scrollHeight 총 길이\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight ===\r\n        document.documentElement.scrollHeight\r\n      ) {\r\n        if (hasMorePosts) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    }; // 메모리에 쌓이는 데이터를 지워줘야됨.\r\n  }, [hasMorePosts, loadPostLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n    //key를 index로 쓰면 안됨. 데이터 변경이 있을 경우.\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,kBAAkB;AAErD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACjB,IAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,mBAAeC,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAzCC,EAAE,gBAAFA,EAAE;EACV,oBAAoCT,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACG,IAAI;IAAA,EAAC;IAA9DC,SAAS,iBAATA,SAAS;IAAEC,YAAY,iBAAZA,YAAY;EAE/Bd,SAAS,CAAC,YAAM;IACdQ,QAAQ,CAAC;MACPO,IAAI,EAAEZ;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENH,SAAS,CAAC,YAAM;IACd,SAASgB,QAAQ,GAAG;MAClBC,OAAO,CAACC,GAAG,CACTC,MAAM,CAACC,OAAO,EACdC,QAAQ,CAACC,eAAe,CAACC,YAAY,EACrCF,QAAQ,CAACC,eAAe,CAACE,YAAY,CACtC,CAAC,CAAC;MACH,IACEL,MAAM,CAACC,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAACC,YAAY,KACtDF,QAAQ,CAACC,eAAe,CAACE,YAAY,EACrC;QACA,IAAIV,YAAY,EAAE;UAChBN,QAAQ,CAAC;YACPO,IAAI,EAAEZ;UACR,CAAC,CAAC;QACJ;MACF;IACF;IACAgB,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAET,QAAQ,CAAC;IAC3C,OAAO,YAAM;MACXG,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEV,QAAQ,CAAC;IAChD,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACF,YAAY,EAAEa,eAAe,CAAC,CAAC;EAEnC,OACE,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACPhB,EAAE,IAAI,MAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClBE,SAAS,CAACe,GAAG,CAAC,UAAChB,IAAI;IAAA,OAClB,MAAC,QAAQ;MAAC,GAAG,EAAEA,IAAI,CAACiB,EAAG;MAAC,IAAI,EAAEjB,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAAA,CACvC,CAAC;EAEJ;EAAA;AAEJ,CAAC;AAAC,GA5CIL,IAAI;EAAA,QACSN,WAAW,EACbC,WAAW,EACUA,WAAW;AAAA;AAAA,KAH3CK,IAAI;AA8CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}