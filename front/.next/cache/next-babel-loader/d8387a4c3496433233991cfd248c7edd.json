{"ast":null,"code":"import axios from 'axios';\nimport { put, takeEvery, fork, all, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport shortId from 'shortid';\nfunction addPostAPI(data) {\n  return axios.post('/api/addpost', data);\n}\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    const id = shortId.generate();\n    //const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      err: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.Comment(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      err: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","put","takeEvery","fork","all","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","shortId","addPostAPI","data","post","addPost","action","id","generate","type","content","ADD_POST_TO_ME","err","response","addCommentAPI","Comment","postId","addComment","watchAddPost","watchAddComment","postSaga"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/sagas/post.js"],"sourcesContent":["import axios from 'axios';\r\nimport { put, takeEvery, fork, all, delay } from 'redux-saga/effects';\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\nimport shortId from 'shortid';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/addpost', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    //const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      err: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.Comment(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      err: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,KAAK,QAAQ,oBAAoB;AACrE,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,QACd,kBAAkB;AACzB,OAAOC,OAAO,MAAM,SAAS;AAE7B,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOd,KAAK,CAACe,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;AACzC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACxB,IAAI;IACF,MAAMZ,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMa,EAAE,GAAGN,OAAO,CAACO,QAAQ,EAAE;IAC7B;IACA,MAAMlB,GAAG,CAAC;MACRmB,IAAI,EAAEb,gBAAgB;MACtBO,IAAI,EAAE;QACJI,EAAE;QACFG,OAAO,EAAEJ,MAAM,CAACH;MAClB;IACF,CAAC,CAAC;IACF,MAAMb,GAAG,CAAC;MACRmB,IAAI,EAAEE,cAAc;MACpBR,IAAI,EAAEI;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMtB,GAAG,CAAC;MACRmB,IAAI,EAAEZ,gBAAgB;MACtBe,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAACV;IACpB,CAAC,CAAC;EACJ;AACF;AAEA,SAASW,aAAa,CAACX,IAAI,EAAE;EAC3B,OAAOd,KAAK,CAAC0B,OAAO,CAAE,aAAYZ,IAAI,CAACa,MAAO,UAAS,EAAEb,IAAI,CAAC;AAChE;AAEA,UAAUc,UAAU,CAACX,MAAM,EAAE;EAC3B,IAAI;IACF,MAAMZ,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMJ,GAAG,CAAC;MACRmB,IAAI,EAAEV,mBAAmB;MACzBI,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZ,MAAMtB,GAAG,CAAC;MACRmB,IAAI,EAAET,mBAAmB;MACzBY,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAACV;IACpB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUe,YAAY,GAAG;EACvB,MAAM3B,SAAS,CAACI,gBAAgB,EAAEU,OAAO,CAAC;AAC5C;AAEA,UAAUc,eAAe,GAAG;EAC1B,MAAM5B,SAAS,CAACO,mBAAmB,EAAEmB,UAAU,CAAC;AAClD;AAEA,eAAe,UAAUG,QAAQ,GAAG;EAClC,MAAM3B,GAAG,CAAC,CAACD,IAAI,CAAC0B,YAAY,CAAC,EAAE1B,IAAI,CAAC2B,eAAe,CAAC,CAAC,CAAC;AACxD"},"metadata":{},"sourceType":"module"}