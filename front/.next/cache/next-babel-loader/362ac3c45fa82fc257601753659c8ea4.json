{"ast":null,"code":"import { all, put, takeEvery, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers';\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n//여기선 * 을 붙이지않는다\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(logInAPI, action.data); //call fork는 call,fork(함수, 매개변수)\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      err: err.response.data\n    });\n  }\n}\n//성공 결과 result.data  실패 결과 err.response.data 에 담겨있음. put = dispatch\n\nfunction logOutAPI(data) {\n  return axios.post('/api/logout', data);\n}\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(logOutAPI, action.data);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      err: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn); //LOG_IN 이나 LOG_IN_REQUEST 할떄 불러오나 같음\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","put","takeEvery","fork","delay","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","LOG_IN_REQUEST","watchLogOut","LOG_OUT_REQUEST","userSaga"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/sagas/user.js"],"sourcesContent":["import { all, put, takeEvery, fork, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n} from '../reducers';\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data);\r\n}\r\n//여기선 * 을 붙이지않는다\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(logInAPI, action.data); //call fork는 call,fork(함수, 매개변수)\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      err: err.response.data,\r\n    });\r\n  }\r\n}\r\n//성공 결과 result.data  실패 결과 err.response.data 에 담겨있음. put = dispatch\r\n\r\nfunction logOutAPI(data) {\r\n  return axios.post('/api/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(logOutAPI, action.data);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      err: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeEvery(LOG_IN_REQUEST, logIn); //LOG_IN 이나 LOG_IN_REQUEST 할떄 불러오나 같음\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,QAAQ,oBAAoB;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,eAAe,QACV,aAAa;AAEpB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtB,OAAON,KAAK,CAACO,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACvC;AACA;;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,IAAI;IACF,MAAMV,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACRc,IAAI,EAAET,cAAc;MACpBK,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMf,GAAG,CAAC;MACRc,IAAI,EAAER,cAAc;MACpBS,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAACN;IACpB,CAAC,CAAC;EACJ;AACF;AACA;;AAEA,SAASO,SAAS,CAACP,IAAI,EAAE;EACvB,OAAON,KAAK,CAACO,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AACxC;AAEA,UAAUQ,MAAM,CAACL,MAAM,EAAE;EACvB,IAAI;IACF,MAAMV,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACRc,IAAI,EAAEP,eAAe;MACrBG,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMf,GAAG,CAAC;MACRc,IAAI,EAAEN,eAAe;MACrBO,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAACN;IACpB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUS,UAAU,GAAG;EACrB,MAAMlB,SAAS,CAACmB,cAAc,EAAER,KAAK,CAAC,CAAC,CAAC;AAC1C;;AAEA,UAAUS,WAAW,GAAG;EACtB,MAAMpB,SAAS,CAACqB,eAAe,EAAEJ,MAAM,CAAC;AAC1C;AAEA,eAAe,UAAUK,QAAQ,GAAG;EAClC,MAAMxB,GAAG,CAAC,CAACG,IAAI,CAACiB,UAAU,CAAC,EAAEjB,IAAI,CAACmB,WAAW,CAAC,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module"}