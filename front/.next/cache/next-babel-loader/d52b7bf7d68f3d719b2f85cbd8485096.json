{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\\\uC815\\uB2E4\\uBE48\\\\Desktop\\\\nodebird\\\\front\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone,\n    addCommentLoading = _useSelector.addCommentLoading;\n  var _useInput = useInput(''),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  var dispatch = useDispatch;\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"I8eSncqcA8AKTILBXnYpqBqfJr8=\", false, function () {\n  return [useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useEffect","Form","Input","Button","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","dispatch","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone, addCommentLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n  const dispatch = useDispatch;\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText('');\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1 }}\r\n          type='primary'\r\n          htmlType='submit'\r\n          loading={addCommentLoading}\r\n        >\r\n          삐약\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAiB;EAAA;EAAA,IAAXC,IAAI,QAAJA,IAAI;EACzB,IAAMC,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,mBAA8CL,WAAW,CACvD,UAACM,KAAK;MAAA,OAAKA,KAAK,CAACF,IAAI;IAAA,EACtB;IAFOK,cAAc,gBAAdA,cAAc;IAAEC,iBAAiB,gBAAjBA,iBAAiB;EAGzC,gBAA2DT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAhEU,WAAW;IAAEC,mBAAmB;IAAEC,cAAc;EACvD,IAAMC,QAAQ,GAAGf,WAAW;EAE5BL,SAAS,CAAC,YAAM;IACd,IAAIe,cAAc,EAAE;MAClBI,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,IAAMM,eAAe,GAAGtB,WAAW,CAAC,YAAM;IACxCuB,OAAO,CAACC,GAAG,CAACb,IAAI,CAACC,EAAE,EAAEM,WAAW,CAAC;IACjCG,QAAQ,CAAC;MACPI,IAAI,EAAEhB,mBAAmB;MACzBiB,IAAI,EAAE;QAAEC,OAAO,EAAET,WAAW;QAAEU,MAAM,EAAEjB,IAAI,CAACC,EAAE;QAAEiB,MAAM,EAAEjB;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACM,WAAW,EAAEN,EAAE,CAAC,CAAC;EAErB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAEU,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEQ,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IACb,KAAK,EAAEb,WAAY;IACnB,QAAQ,EAAEC,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,EACF,MAAC,MAAM;IACL,KAAK,EAAE;MAAEW,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAClE,IAAI,EAAC,SAAS;IACd,QAAQ,EAAC,QAAQ;IACjB,OAAO,EAAEjB,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAGpB,CACC,CACP;AAEX,CAAC;AAAC,GAzCIP,WAAW;EAAA,QACJH,WAAW,EACwBA,WAAW,EAGEC,QAAQ;AAAA;AAAA,KAL/DE,WAAW;AA2CjBA,WAAW,CAACyB,SAAS,GAAG;EACtBxB,IAAI,EAAEN,SAAS,CAAC+B,MAAM,CAACC;AACzB,CAAC;AAED,eAAe3B,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}