{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글 #해시태그',\n    Images: [],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n}; //더미 데이터\n\nconst ADD_POST = 'ADD_POST'; //오타방지용으로 변수로 빼주는게 좋다\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  constent: '더미'\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts] //dummyPost를 앞에다 두어야 게시물이 위에 온다.\n      });\n\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","constent","reducer","state","action"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/reducers/post.js"],"sourcesContent":["export const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n      },\r\n      content: '첫 번째 게시글 #해시태그',\r\n      Images: [],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: 'nero',\r\n          },\r\n          content: '우와',\r\n        },\r\n        {\r\n          User: {\r\n            nickname: 'hero',\r\n          },\r\n          content: '사고싶어요~',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  postAdded: false,\r\n}; //더미 데이터\r\n\r\nconst ADD_POST = 'ADD_POST'; //오타방지용으로 변수로 빼주는게 좋다\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n};\r\nconst dummyPost = {\r\n  id: 2,\r\n  constent: '더미',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost, ...state.mainPosts], //dummyPost를 앞에다 두어야 게시물이 위에 온다.\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":";;;AAAA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MACJD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAE,gBAAgB;IACzBC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEJ,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;IACX,CAAC,EACD;MACEF,IAAI,EAAE;QACJC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,CACF;EACDG,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC,CAAC,CAAC;;AAEH,MAAMC,QAAQ,GAAG,UAAU,CAAC,CAAC;AAC7B,OAAO,MAAMC,OAAO,GAAG;EACrBC,IAAI,EAAEF;AACR,CAAC;AACD,MAAMG,SAAS,GAAG;EAChBX,EAAE,EAAE,CAAC;EACLY,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAKF,QAAQ;MACX,uCACKM,KAAK;QACRf,SAAS,EAAE,CAACY,SAAS,EAAE,GAAGG,KAAK,CAACf,SAAS,CAAC,CAAE;MAAA;;IAEhD;MACE,OAAOe,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}