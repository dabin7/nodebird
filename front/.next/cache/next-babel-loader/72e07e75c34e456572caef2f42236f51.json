{"ast":null,"code":"import { all, put, takeEvery, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n//여기선 * 을 붙이지않는다\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(logInAPI, action.data); //call fork는 call,fork(함수, 매개변수)\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n//성공 결과 result.data  실패 결과 err.response.data 에 담겨있음. put = dispatch\n\nfunction logOutAPI(data) {\n  return axios.post('/api/logout', data);\n}\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(logOutAPI, action.data);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeEvery('LOG_IN_REQUEST', logIn); //LOG_IN 이나 LOG_IN_REQUEST 할떄 불러오나 같음\n}\n\nfunction* watchLogOut() {\n  yield takeEvery('LOG_OUT_REQUEST', logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["all","put","takeEvery","fork","delay","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","result","watchLogIn","watchLogOut","userSaga"],"sources":["C:/Users/정다빈/Desktop/nodebird/front/sagas/user.js"],"sourcesContent":["import { all, put, takeEvery, fork, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data);\r\n}\r\n//여기선 * 을 붙이지않는다\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(logInAPI, action.data); //call fork는 call,fork(함수, 매개변수)\r\n    yield put({\r\n      type: 'LOG_IN_SUCCESS',\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n//성공 결과 result.data  실패 결과 err.response.data 에 담겨있음. put = dispatch\r\n\r\nfunction logOutAPI(data) {\r\n  return axios.post('/api/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(logOutAPI, action.data);\r\n    yield put({\r\n      type: 'LOG_OUT_SUCCESS',\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_OUT_FAILURE',\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeEvery('LOG_IN_REQUEST', logIn); //LOG_IN 이나 LOG_IN_REQUEST 할떄 불러오나 같음\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeEvery('LOG_OUT_REQUEST', logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,QAAQ,oBAAoB;AACrE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACvC;AACA;;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,IAAI;IACF,MAAMN,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACRU,IAAI,EAAE,gBAAgB;MACtBJ,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,gBAAgB;MACtBJ,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACrB,CAAC,CAAC;EACJ;AACF;AACA;;AAEA,SAASO,SAAS,CAACP,IAAI,EAAE;EACvB,OAAOF,KAAK,CAACG,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AACxC;AAEA,UAAUQ,MAAM,CAACL,MAAM,EAAE;EACvB,IAAI;IACF,MAAMN,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMH,GAAG,CAAC;MACRU,IAAI,EAAE,iBAAiB;MACvBJ,IAAI,EAAES,MAAM,CAACT;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMX,GAAG,CAAC;MACRU,IAAI,EAAE,iBAAiB;MACvBJ,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUU,UAAU,GAAG;EACrB,MAAMf,SAAS,CAAC,gBAAgB,EAAEO,KAAK,CAAC,CAAC,CAAC;AAC5C;;AAEA,UAAUS,WAAW,GAAG;EACtB,MAAMhB,SAAS,CAAC,iBAAiB,EAAEa,MAAM,CAAC;AAC5C;AAEA,eAAe,UAAUI,QAAQ,GAAG;EAClC,MAAMnB,GAAG,CAAC,CAACG,IAAI,CAACc,UAAU,CAAC,EAAEd,IAAI,CAACe,WAAW,CAAC,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module"}